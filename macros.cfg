[gcode_macro ECHO_LISTER_VARS]
description: Echo Lister variables to the console.
gcode:
    {% for var, value in printer["gcode_macro Lister"].items() %}
        {action_respond_info(var ~ ": " ~ value)}
    {% endfor %}
    
[gcode_macro Lister]
description: Lister variable storage macro, will echo variables to the console when run.
# Configuration Defaults
# This is only here to make the config backwards compatible.
# Configuration should exclusively happen in printer.cfg.

# Lister
variable_nozzle_pid_temp: 200
variable_bed_pid_temp: 75

gcode:
    ECHO_LISTER_VARS

[gcode_macro DISABLE_X_Y_STEPPERS]
description: Turns off X and Y steppers.
gcode:
    RESPOND MSG="Disabling X and Y steppers"
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0

[gcode_macro BED_PROBE_MANUAL_ADJUST]
description: This will help you adjust the base for the bed with the help of a probe. It will tell you how to turn the screws at the bottom of the bed.
gcode:
    RESPOND MSG="Starting bed probe manual adjustment"
    MAYBE_HOME
    SCREWS_TILT_CALCULATE

[gcode_macro COLD_CHANGE_FILAMENT]
description: Change filament routine
variable_default_temp: 220
gcode:
    {% set NOZZLE_TEMP = params.TEMP|default(default_temp)|float %}
    RESPOND MSG="Starting filament change routine"
    M104 S{NOZZLE_TEMP} ; Set nozzle to the specified temperature
    M109 S{NOZZLE_TEMP} ; Wait for nozzle to reach the specified temperature
    RESPOND MSG="Nozzle at temperature, proceeding with filament change"
    M83 ; Set extruder to relative mode
    G91 ; Set all axes to relative mode
    G1 E-10 F300 ; Retract 10mm
    G1 E5 F300 ; Extrude 5mm
    G1 E-10 F300 ; Retract 10mm
    G1 E5 F300 ; Extrude 5mm
    G1 E-15 F300 ; Retract 15mm
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    RESPOND MSG="Filament change complete, waiting for 5 minutes"
    G4 P300000 ; Wait for 5 minutes (300000 milliseconds)
    M104 S0 ; Turn off the nozzle heater
    RESPOND MSG="Filament change process finished"

[gcode_macro _FILAMENT_RAN_OUT]
description: Change filament routine for filament runout.
gcode:
    {% set EXTRUDE_LENGTH = params.LENGTH|default(200)|float %}
    
    RESPOND MSG="Filament runout detected, pausing print"
    PAUSE
    
    # Wait a moment for the pause to complete
    G4 P1000 ; Wait for 1 second
    
    # Heat up the nozzle if it's not already hot
    {% if printer.extruder.temperature < printer.extruder.target %}
        RESPOND MSG="Heating nozzle to target temperature"
        M109 S{printer.extruder.target} ; Wait for nozzle to reach target temperature
    {% endif %}
    
    # Extrude specified length of filament
    RESPOND MSG="Extruding {EXTRUDE_LENGTH}mm of filament"
    M83 ; Set extruder to relative mode
    G1 E{EXTRUDE_LENGTH} F300 ; Extrude at 5mm/s (300mm/min)
    G1 E-2 F1800 ; Retract 2mm to prevent oozing
    
    # Disable the extruder stepper
    RESPOND MSG="Disabling extruder stepper"
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    
    RESPOND MSG="Filament change required. Please change filament and resume print."

[gcode_macro _FILAMENT_INSERTED]
description: Routine to handle filament insertion
gcode:
    {% set EXTRUDE_LENGTH = params.LENGTH|default(30)|float %}
    {% set DELAY = params.DELAY|default(5)|int %}
    {% set SLOW_EXTRUDE_LENGTH = 20 %}  # Length to extrude slowly to grab filament
    {% set PURGE_LENGTH = EXTRUDE_LENGTH - SLOW_EXTRUDE_LENGTH %}  # Remaining length for purge

    RESPOND MSG="Filament inserted. Starting insertion process in {DELAY} seconds."
    G4 P{DELAY * 1000}  # Wait for specified delay in milliseconds

    # Ensure the nozzle is at the target temperature
    {% if printer.extruder.temperature < printer.extruder.target %}
        RESPOND MSG="Heating nozzle to target temperature"
        M109 S{printer.extruder.target}
    {% endif %}

    M83  # Set extruder to relative mode

    # Slow extrusion to grab filament
    RESPOND MSG="Slowly extruding to grab filament"
    G1 E{SLOW_EXTRUDE_LENGTH} F60  # Extrude at 1mm/s

    # Faster extrusion to purge
    RESPOND MSG="Purging filament"
    G1 E{PURGE_LENGTH} F300  # Extrude at 5mm/s

    G1 E-2 F1800  # Retract 2mm to prevent oozing

    RESPOND MSG="Filament insertion complete"

[gcode_macro START_PRINT]
description: Start code before print.
gcode:
    RESPOND MSG="Starting print preparation"
    CLEAR_PAUSE
    G90
    M220 S100 ;Reset Feedrate
    M221 S100 ;Reset Flowrate

    SAVE_GCODE_STATE NAME=start_print_state

    {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
    {% set HOTEND_TEMP = params.HOTEND_TEMP|default(215)|float %}
    {% set FILAMENT_TYPE = params.FILAMENT_TYPE|default("PLA")|string %}
    {% set EXTRUSION_MULTIPLIER = params.EXTRUSION_MULTIPLIER|default(1)|float %}

    ; Asynchronously start heating Extruder and Bed Temperature
    RESPOND MSG="Pre-heating Extruder/Bed..."

    M140 S{BED_TEMP}
    M104 S120

    MAYBE_HOME

    G1 Z30.0 X0 Y0 F3000 ;Move Z Axis up

    M190 S{BED_TEMP}

    TURN_ON_LIGHT
    BED_MESH_CLEAR
    RESPOND MSG="Performing Z-tilt adjustment"
    Z_TILT_ADJUST
    RESPOND MSG="Calibrating bed mesh"
    BED_MESH_CALIBRATE ADAPTIVE=1

    G1 Z30.0 X0 Y0 F3000 ;Move Z Axis up

    M109 S{HOTEND_TEMP}
    M83 ; Set extruder to relative mode

    RESPOND MSG="Purging nozzle"
    _PURGE

    M117 Printing...
    RESPOND MSG="Starting print"
    RESTORE_GCODE_STATE NAME=start_print_state

    G92 E0.0
    TURN_LOW_LIGHT

[gcode_macro _PURGE]
description: Purges filament to clear nozzle.
gcode:
    M117 Purging nozzle...
    RESPOND MSG="Purging nozzle..."

    # Calculate purge line positions based on bed size
    {% set bed_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set bed_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set start_y = 20 %}
    {% set end_y = bed_y - 20 %}

    ; Go outside Print Area <- Start of actual Purge / Prime Line.
    G1 Z0.0 F3000 ;Move Z Axis up
    G1 Z2.0 F3000 ;Move Z Axis up
    G1 X0 Y{start_y} Z0.28 F4000.0 ;Move to start position
    G1 X0 Y{end_y} Z0.28 F1500.0 E15 ;Draw the first line
    G1 X0.5 Y{end_y} Z0.28 F4000.0 ;Move to side a little
    G1 X0.5 Y{start_y} Z0.28 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 E-0.2 ;Move Z Axis up'

    M117 Done purging nozzle.
    RESPOND MSG="Done purging nozzle."

[gcode_macro END_PRINT]
description: End code after print.
gcode:
    RESPOND MSG="Ending print"
    {% set x_min = printer.toolhead.axis_minimum.x|float %}
    {% set y_min = printer.toolhead.axis_minimum.y|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}

    G92 E5.0
    G91 ;Relative positioning
    M83 ;Relative extruder positioning. 
    G1 E-5 F720 ;Retract a bit
    G90 ;Absolute positioning

    G1 X{x_min} Y{y_min} Z{z_max} F3000 ;Present print

    BED_MESH_CLEAR

    RESPOND MSG="Turning off heaters"
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed

    BOTTOM

    RESPOND MSG="Disabling steppers"
    M84 X Y E Z ;Disable all steppers.
    M106 S0 ;Turn-off fan
    TURN_LOW_LIGHT

[gcode_macro TUNE_NOZZLE_PID]
description: Runs calibration for PID values on extruder.
gcode:
    RESPOND MSG="Starting nozzle PID tuning"
    PID_CALIBRATE HEATER=extruder TARGET=printer["gcode_macro Lister"].nozzle_pid_temp
    RESPOND MSG="Nozzle PID tuning complete, saving configuration"
    SAVE_CONFIG

[gcode_macro TUNE_BED_PID]
description: Runs calibration for PID values on bed.
gcode:
    RESPOND MSG="Starting bed PID tuning"
    PID_CALIBRATE HEATER=heater_bed TARGET=printer["gcode_macro Lister"].bed_pid_temp
    RESPOND MSG="Bed PID tuning complete, saving configuration"
    SAVE_CONFIG

[gcode_macro _SENSORLESS_HOME_X]
description: Performs sensorless homing for X axis
gcode:
    {% set HOME_CUR = printer.configfile.settings['tmc2209 stepper_x'].homing_current|default(0.700)|float %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set x_min = printer.toolhead.axis_minimum.x|float %}
    RESPOND MSG="Starting sensorless homing for X axis"
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X{x_min}
    # Move away
    G90
    G1 X6 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    RESPOND MSG="X axis sensorless homing complete"

[gcode_macro _SENSORLESS_HOME_Y]
description: Performs sensorless homing for Y axis
gcode:
    {% set HOME_CUR = printer.configfile.settings['tmc2209 stepper_y'].homing_current|default(0.700)|float %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set y_min = printer.toolhead.axis_minimum.y|float %}
    RESPOND MSG="Starting sensorless homing for Y axis"
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y{y_min}
    # Move away
    G90
    G1 Y0 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    RESPOND MSG="Y axis sensorless homing complete"

[gcode_macro _SENSORLESS_HOME_Z]
description: Performs sensorless homing for Z axis
gcode:
    {% set HOME_CUR = printer.configfile.settings['tmc2209 stepper_z'].homing_current|default(0.700)|float %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_z'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}
    RESPOND MSG="Starting sensorless homing for Z axis"
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Z{z_max}
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={RUN_CUR}
    G4 P2000
    RESPOND MSG="Z axis sensorless homing complete"
  
[gcode_macro HOME]
description: Homes all axes
gcode:
    RESPOND MSG="Homing all axes"
    G90 ; use absolute coordinates
    G28
    M83 ; extruder relative mode
    RESPOND MSG="Homing complete"

[gcode_macro TURN_ON_LIGHT]
description: Turns on the printer light
gcode:
    RESPOND MSG="Turning on light"
    SET_PIN PIN=light_led VALUE=1

[gcode_macro TURN_LOW_LIGHT]
description: Sets the printer light to low intensity
gcode:
    RESPOND MSG="Setting light to low intensity"
    SET_PIN PIN=light_led VALUE=.4

[gcode_macro TURN_OFF_LIGHT]
description: Turns off the printer light
gcode:
    RESPOND MSG="Turning off light"
    SET_PIN PIN=light_led VALUE=0

[gcode_macro PAUSE]
description: Pauses the printer
rename_existing: PAUSE_BASE
variable_extrude: 1.5
gcode:
    RESPOND MSG="Pausing print"
    SAVE_GCODE_STATE NAME=PAUSE_state
    TURN_ON_LIGHT
    # Define park positions 
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    {% set speed = 80|float * 60 %}
    {% set z_speed = 15|float * 60 %}

    {% set x_min = printer.toolhead.axis_minimum.x|float %}
    {% set y_min = printer.toolhead.axis_minimum.y|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}

    # Calculate safe Z position
    # Check if there is space for Z to move down when parking.
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 22.0) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - act_z - 2 %}
    {% endif %}
    PAUSE_BASE
    G91
    # Retract
    # Check if extruder can be extruded before retracting.
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{E} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    # Move to park position
    {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F{z_speed}
        G90 
        # Park
        G0 X{x_min} Y{y_min} F{speed}
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %} 

[gcode_macro RESUME]
description: Resumes the print if the printer is paused.
rename_existing: RESUME_BASE
gcode:
    RESPOND MSG="Resuming print"
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    {% set z_speed = 15|float * 60 %}
    # Prime
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G91
        G1 E{E} F2100
        G90
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={z_speed}
    RESUME_BASE

[gcode_macro M600]
description: Filament change
gcode:
    RESPOND TYPE=command MSG='M600'

    {% if printer.pause_resume.is_paused %}
        {action_respond_info("Already paused")}
    {% elif printer.toolhead.homed_axes != "xyz" %}
        {action_respond_info("Please home XYZ first")}
    {% else %}
        PAUSE 
        SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    {% endif %}

[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
  {% set axes = '' %}
  {% set isHomed = true %}
  {% set axesToHome = '' %}
  {% if params.X is defined %}
    {% set axes = axes ~ 'X ' %}
    {% if 'x' not in printer.toolhead.homed_axes %}
      {% set isHomed = false %}
      {% set axesToHome = axesToHome ~ 'X ' %}
    {% endif %}
  {% endif %}
  {% if params.Y is defined %}
    {% set axes = axes ~ 'Y ' %}
    {% if 'y' not in printer.toolhead.homed_axes %}
      {% set isHomed = false %}
      {% set axesToHome = axesToHome ~ 'Y ' %}
    {% endif %}
  {% endif %}
  {% if params.Z is defined %}
    {% set axes = axes ~ 'Z ' %}
    {% if 'z' not in printer.toolhead.homed_axes %}
      {% set isHomed = false %}
      {% set axesToHome = axesToHome ~ 'Z ' %}
    {% endif %}
  {% endif %}
  {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
    {% set axes = '' %}
    {% if 'x' not in printer.toolhead.homed_axes %}
      {% set isHomed = false %}
      {% set axesToHome = axesToHome ~ 'X ' %}
    {% endif %}
    {% if 'y' not in printer.toolhead.homed_axes %}
      {% set isHomed = false %}
      {% set axesToHome = axesToHome ~ 'Y ' %}
    {% endif %}
    {% if 'z' not in printer.toolhead.homed_axes %}
      {% set isHomed = false %}
      {% set axesToHome = axesToHome ~ 'Z ' %}
    {% endif %}
  {% endif %}
  {% if isHomed is false %}
    M117 Homing {axesToHome}
    RESPOND MSG="Homing {axesToHome}"
    G28 {axesToHome}
  {% else %}
    RESPOND MSG="All requested axes already homed, skipping.."
  {% endif %}