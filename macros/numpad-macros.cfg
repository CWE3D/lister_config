[gcode_macro _SAFE_PARK_OFF]
description: Safely park all axes and turn off steppers
gcode:
    {% if printer.virtual_sdcard.is_active %}
        RESPOND TYPE=error MSG="Numpad macros: Cannot park, printer is currently printing"
    {% else %}
        RESPOND TYPE=echo MSG="Numpad macros: Starting safe park and disable sequence"

        # Use existing MAYBE_HOME instead of direct G28
        MAYBE_HOME

        # Calculate safe park position using the new system
        _CALCULATE_SAFE_Z
        {% set safe_z = printer["gcode_macro _CALCULATE_SAFE_Z"].safe_z %}
        {% set park_x = printer["gcode_macro Lister"].park_x %}
        {% set park_y = printer["gcode_macro Lister"].park_y %}

        # Move to safe position
        G90  # Absolute positioning
        G1 Z{safe_z} F600
        G1 X{park_x} Y{park_y} F3000

        # Use existing macro to disable steppers
        DISABLE_X_Y_STEPPERS
        M84  # Disable all other steppers

        RESPOND TYPE=echo MSG="Numpad macros: Parked at X:{park_x} Y:{park_y} Z:{safe_z} and disabled steppers"
    {% endif %}

[gcode_macro _HOME_ALL]
description: Home all axes
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Homing all axes"
    MAYBE_HOME  # Use existing macro instead of direct HOME
    RESPOND TYPE=echo MSG="Numpad macros: Homing complete"

[gcode_macro _REPEAT_LAST_PRINT]
description: Will repeat the last print
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Will repeat the last print"
    {% set last_file = printer.virtual_sdcard.file_path %}
    {% if last_file %}
        RESPOND TYPE=echo MSG="Numpad macros: Repeating print of '{last_file}'"
        CLEAR_PAUSE  # Use existing functionality
        START_PRINT  # Use your existing start print routine
        SDCARD_PRINT_FILE FILENAME="{last_file}"
    {% else %}
        RESPOND TYPE=echo MSG="Numpad macros: No previous print file found"
    {% endif %}

[gcode_macro _TOGGLE_PAUSE_RESUME]
description: Will pause if printing, will resume if paused
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Will pause if printing, will resume if paused"
    {% if printer.pause_resume.is_paused %}
        RESPOND TYPE=echo MSG="Numpad macros: Print is paused - Resuming"
        RESUME  # Use your existing RESUME macro
    {% else %}
        {% if printer.virtual_sdcard.is_active %}
            RESPOND TYPE=echo MSG="Numpad macros: Print is active - Pausing"
            PAUSE  # Use your existing PAUSE macro
        {% else %}
            RESPOND TYPE=echo MSG="Numpad macros: No active print"
        {% endif %}
    {% endif %}

[gcode_macro _CALIBRATE_NOZZLE_OFFSET_PROBE]
description: Will run the calibration of nozzle offset from probe
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Will run the calibration of nozzle offset from probe"
    PROBE_NOZZLE_DISTANCE  # Use your existing macro

[gcode_macro _PROBE_BED_MESH]
description: Will run a probe bed mesh
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Will run a probe bed mesh"
    MAYBE_HOME  # Ensure homing first
    BED_MESH_CLEAR  # Clear existing mesh
    BED_MESH_CALIBRATE ADAPTIVE=1  # Use adaptive meshing as in your START_PRINT

[gcode_macro _BED_PROBE_MANUAL_ADJUST]
description: Utility to level the bed with gantry, probing ends with adjustments help
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Starting bed probe manual adjustment"
    BED_PROBE_MANUAL_ADJUST  # Use your existing macro

[gcode_macro _PRE_HEAT_NOZZLE]
description: Will heat the nozzle up to a reasonable temperature for nozzle cleaning
gcode:
    {% set TEMP = printer["gcode_macro Lister"].nozzle_pid_temp %}
    RESPOND TYPE=echo MSG="Numpad macros: Will heat the nozzle up to {TEMP}°C"
    M104 S{TEMP}  # Use temperature from Lister config

[gcode_macro _PRE_HEAT_BED]
description: Will heat the bed up to a reasonable temperature
gcode:
    {% set TEMP = printer["gcode_macro Lister"].bed_pid_temp %}
    RESPOND TYPE=echo MSG="Numpad macros: Will heat the bed up to {TEMP}°C"
    M140 S{TEMP}  # Use temperature from Lister config

[gcode_macro _KNOB_UP]
description: Increases value for current stage (first layer offset, printing speed, probe nozzle offset adjust)
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Increases value for current stage (first layer offset, printing speed, probe nozzle offset adjust)"


[gcode_macro _KNOB_DOWN]
description: Reduce value for current stage (first layer offset, printing speed, probe nozzle offset adjust)
gcode:
    RESPOND TYPE=echo MSG="Numpad macros: Reduce value for current stage (first layer offset, printing speed, probe nozzle offset adjust)"